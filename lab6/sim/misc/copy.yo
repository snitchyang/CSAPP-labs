                            | # 杨征，521021910478
                            | 
0x000:                      | .pos 0
0x000:                      | init:
0x000: 30f40002000000000000 |     irmovq Stack, %rsp
0x00a: 30f50002000000000000 |     irmovq Stack, %rbp
0x014: 805000000000000000   |     call Main
0x01d: 00                   |     halt
                            | 
0x020:                      | .align 8
                            | # Source block
0x020:                      | src:
0x020: 0a00000000000000     |     .quad 0x00a
0x028: b000000000000000     |     .quad 0x0b0
0x030: 000c000000000000     |     .quad 0xc00
                            | # Destination block
0x038:                      | dest:
0x038: 1101000000000000     |     .quad 0x111
0x040: 2202000000000000     |     .quad 0x222
0x048: 3303000000000000     |     .quad 0x333
                            | 
0x050:                      | Main:
0x050: a05f                 |     pushq %rbp
0x052: 2045                 |     rrmovq %rsp, %rbp
                            |     # call copy_block
0x054: 30f72000000000000000 |     irmovq src, %rdi
0x05e: 30f63800000000000000 |     irmovq dest, %rsi
0x068: 30f20300000000000000 |     irmovq $3, %rdx
0x072: 808000000000000000   |     call copy_block
                            |     # return result
0x07b: 2054                 |     rrmovq %rbp, %rsp
0x07d: b05f                 |     popq %rbp
0x07f: 90                   |     ret
                            | 
0x080:                      | copy_block:
0x080: a05f                 |     pushq %rbp
0x082: 2045                 |     rrmovq %rsp, %rbp
                            |     # result = 0
0x084: 30f00000000000000000 |     irmovq $0, %rax
0x08e:                      | loop:
                            |     # while (len > 0)
0x08e: 6222                 |     andq %rdx, %rdx
0x090: 73dc00000000000000   |     je end
                            |     # long val = *src++;
0x099: 50370000000000000000 |     mrmovq (%rdi), %rbx
0x0a3: 30f10800000000000000 |     irmovq $8, %rcx
0x0ad: 6017                 |     addq %rcx, %rdi
                            |     # *dest++ = val;
0x0af: 30f10800000000000000 |     irmovq $8, %rcx
0x0b9: 6016                 |     addq %rcx, %rsi
0x0bb: 40360000000000000000 |     rmmovq %rbx, (%rsi)
                            |     # result ^= val;
0x0c5: 6330                 |     xorq %rbx, %rax
                            |     # len--;
0x0c7: 30f10100000000000000 |     irmovq $1, %rcx
0x0d1: 6112                 |     subq %rcx, %rdx
0x0d3: 708e00000000000000   |     jmp loop
0x0dc:                      | end:
                            |     # return result
0x0dc: 2054                 |     rrmovq %rbp, %rsp
0x0de: b05f                 |     popq %rbp
0x0e0: 90                   |     ret
                            | 
                            |     
0x200:                      | .pos 0x200
0x200:                      | Stack:
                            | 
